{
  "name": "ESG Ticker Assistant-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2023-10-06T16:38:36.224Z",
  "updated": "2023-10-18T00:39:58.883Z",
  "language": "en",
  "skill_id": "68f462f4-424a-40eb-a198-e948b7b7ea28",
  "workspace": {
    "actions": [
      {
        "steps": [
          {
            "step": "step_778",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "For which company ticker symbol would you like to get the key ESG data?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "options": [
                    {
                      "label": "ABNP",
                      "value": {
                        "input": {
                          "text": "ABNP"
                        }
                      }
                    },
                    {
                      "label": "MIDP",
                      "value": {
                        "input": {
                          "text": "MIDP"
                        }
                      }
                    },
                    {
                      "label": "RECV",
                      "value": {
                        "input": {
                          "text": "RECV"
                        }
                      }
                    },
                    {
                      "label": "Other",
                      "value": {
                        "input": {
                          "text": "Other"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_49623",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_778",
            "next_step": "step_877"
          },
          {
            "step": "step_877",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please provide the ticker symbol..."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text": "I'm sorry, I did not catch that, please restate your response."
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_877",
            "condition": {
              "eq": [
                {
                  "variable": "step_778"
                },
                {
                  "value": "Other",
                  "from_entity": "entity_49623"
                }
              ]
            },
            "next_step": "step_451"
          },
          {
            "step": "step_451",
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_877"
                  },
                  "skill_variable": "ESGTicker_ticker"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_3200-2-2-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_451_result_1"
              }
            },
            "variable": "step_451",
            "condition": {
              "eq": [
                {
                  "variable": "step_778"
                },
                {
                  "value": "Other",
                  "from_entity": "entity_49623"
                }
              ]
            },
            "next_step": "step_787"
          },
          {
            "step": "step_787",
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_778"
                  },
                  "skill_variable": "ESGTicker_ticker"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_3200-2-2-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_787_result_1"
              }
            },
            "variable": "step_787",
            "condition": {
              "neq": [
                {
                  "variable": "step_778"
                },
                {
                  "value": "Other",
                  "from_entity": "entity_49623"
                }
              ]
            },
            "next_step": "step_613"
          },
          {
            "step": "step_613",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Here are some of the key ESG data values for company ticker "
                          },
                          {
                            "skill_variable": "ESGTicker_ticker"
                          },
                          {
                            "scalar": " (Industry: "
                          },
                          {
                            "skill_variable": "ESGTicker_Industry"
                          },
                          {
                            "scalar": ")\n\n<br />\n\n\n\nCO2: "
                          },
                          {
                            "skill_variable": "ESGTicker_Co2"
                          },
                          {
                            "scalar": "\n\nEnergy Use: "
                          },
                          {
                            "skill_variable": "ESGTicker_Energyuse"
                          },
                          {
                            "scalar": "\n\nWater Use : "
                          },
                          {
                            "skill_variable": "ESGTicker_Wateruse"
                          },
                          {
                            "scalar": "\n\nTotal Waste: "
                          },
                          {
                            "skill_variable": "ESGTickerTotalwaste"
                          },
                          {
                            "scalar": "\n\nPolicy Dataprivacy: "
                          },
                          {
                            "skill_variable": "ESGTicker_Policydataprivacy"
                          },
                          {
                            "scalar": "\n\nWomen Employees: "
                          },
                          {
                            "skill_variable": "ESGTicker_Womenemployees"
                          },
                          {
                            "scalar": "\n\nTrade Union Reps: "
                          },
                          {
                            "skill_variable": "ESGTicker_Tradeunionrep"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_778"
                },
                {
                  "variable": "step_877"
                },
                {
                  "variable": "step_451"
                },
                {
                  "variable": "step_787"
                }
              ]
            },
            "variable": "step_613"
          }
        ],
        "title": "ESG Data Assistant",
        "action": "action_11528",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_11528_intent_6205"
        },
        "variables": [
          {
            "title": "No response",
            "variable": "step_451",
            "data_type": "any"
          },
          {
            "variable": "step_451_result_1",
            "data_type": "any"
          },
          {
            "title": "Here are some of the key ESG data values for company ticker {var",
            "variable": "step_613",
            "data_type": "any"
          },
          {
            "title": "For which company ticker symbol would you like to get the key ES",
            "variable": "step_778",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_787",
            "data_type": "any"
          },
          {
            "variable": "step_787_result_1",
            "data_type": "any"
          },
          {
            "title": "Please provide the ticker symbol...",
            "variable": "step_877",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_3200-2-2-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_817",
            "output": {
              "generic": []
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ESGFastTickerService",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "15dbb98b7ad2a36a7af7f11c763275487b5dd159768c43d3487e9a8b58767942",
                  "catalog_item_id": "0c043379-eba1-4f33-b563-e4fe8b874b7a"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "ESGTicker_ticker"
                      },
                      "parameter": "ticker"
                    }
                  ]
                },
                "result_variable": "step_817_result_2"
              }
            },
            "variable": "step_817",
            "next_step": "step_606"
          },
          {
            "step": "step_606",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_817_result_2.body}"
                  },
                  "skill_variable": "ESGTicker_response"
                },
                {
                  "value": {
                    "expression": "${step_817_result_2.body.ESG_properties}[1].Totalwaste"
                  },
                  "skill_variable": "ESGTickerTotalwaste"
                },
                {
                  "value": {
                    "variable": "step_817_result_2",
                    "variable_path": "body.Industry"
                  },
                  "skill_variable": "ESGTicker_Industry"
                },
                {
                  "value": {
                    "expression": "${step_817_result_2.body.ESG_properties}[4].Wateruse"
                  },
                  "skill_variable": "ESGTicker_Wateruse"
                },
                {
                  "value": {
                    "expression": "${step_817_result_2.body.ESG_properties}[5].Energyuse"
                  },
                  "skill_variable": "ESGTicker_Energyuse"
                },
                {
                  "value": {
                    "expression": "${step_817_result_2.body.ESG_properties}[9].Policydataprivacy"
                  },
                  "skill_variable": "ESGTicker_Policydataprivacy"
                },
                {
                  "value": {
                    "expression": "${step_817_result_2.body.ESG_properties}[10].Womenemployees"
                  },
                  "skill_variable": "ESGTicker_Womenemployees"
                },
                {
                  "value": {
                    "expression": "${step_817_result_2.body.ESG_properties}[12].Tradeunionrep"
                  },
                  "skill_variable": "ESGTicker_Tradeunionrep"
                },
                {
                  "value": {
                    "expression": "${step_817_result_2.body.ESG_properties}[0].Co2"
                  },
                  "skill_variable": "ESGTicker_Co2"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_606",
            "condition": {
              "eq": [
                {
                  "variable": "step_817_result_2",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            },
            "next_step": "step_212"
          },
          {
            "step": "step_212",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": "ESGFastTicker service failed."
                  },
                  "skill_variable": "ESGTicker_response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_212"
          }
        ],
        "title": "Invoke ESGFastTickerService",
        "action": "action_3200-2-2-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_3200_intent_45093-2-2-2"
        },
        "variables": [
          {
            "title": "",
            "variable": "step_212",
            "data_type": "any"
          },
          {
            "title": "",
            "variable": "step_606",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_817",
            "data_type": "any"
          },
          {
            "variable": "step_817_result_2",
            "data_type": "any"
          }
        ],
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_11528",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_11528_intent_6205",
        "examples": [
          {
            "text": "Check ESG Data"
          },
          {
            "text": "Hi"
          }
        ]
      },
      {
        "intent": "action_3200_intent_45093-2-2-2",
        "examples": []
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "entity_49623",
        "values": [
          {
            "type": "synonyms",
            "value": "ABNP",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "MIDP",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Other",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "RECV",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-number",
        "values": []
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "skill": {
        "counts": {
          "actions": 7,
          "intents": 4,
          "entities": 6,
          "data_types": 0,
          "collections": 0,
          "global_variables": 23
        }
      },
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "ESGTicker_Co2",
        "variable": "ESGTicker_Co2",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "ESGTicker_Energyuse",
        "variable": "ESGTicker_Energyuse",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "ESGTicker_Industry",
        "variable": "ESGTicker_Industry",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "ESGTicker_Policydataprivacy",
        "variable": "ESGTicker_Policydataprivacy",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "ESGTicker_response",
        "variable": "ESGTicker_response",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "ESGTicker_ticker",
        "variable": "ESGTicker_ticker",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "ABNP"
        }
      },
      {
        "title": "ESGTickerTotalwaste",
        "variable": "ESGTickerTotalwaste",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "ESGTicker_Tradeunionrep",
        "variable": "ESGTicker_Tradeunionrep",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "ESGTicker_Wateruse",
        "variable": "ESGTicker_Wateruse",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "ESGTicker_Womenemployees",
        "variable": "ESGTicker_Womenemployees",
        "data_type": "number",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true
  },
  "description": "created for assistant 05c10d7d-336f-4d33-8cb3-5c53520d61ce",
  "assistant_id": "d00bfdf6-4fe3-4b88-bac0-4319070a79b4",
  "workspace_id": "68f462f4-424a-40eb-a198-e948b7b7ea28",
  "dialog_settings": {},
  "next_snapshot_version": "2",
  "environment_id": "be232274-cc7b-4e0d-a8c5-16101780b60e"
}